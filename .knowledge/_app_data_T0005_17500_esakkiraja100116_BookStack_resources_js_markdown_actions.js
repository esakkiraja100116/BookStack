{"is_source_file": true, "format": "JavaScript", "description": "This file defines an Actions class that provides methods for manipulating a Markdown editor, including content insertion, formatting, and managing images and links.", "external_files": ["../services/drawio"], "external_methods": ["window.$events.emit", "window.$http.post", "window.$components.first"], "published": [], "classes": [{"name": "Actions", "description": "Class to handle various actions on a Markdown editor, including image and link management, text formatting, and content manipulation."}], "methods": [{"name": "constructor", "description": "Initializes an instance of the Actions class with the editor and last content state."}, {"name": "updateAndRender", "description": "Updates the editor's content and renders it into HTML."}, {"name": "getContent", "description": "Returns the last content that was manipulated by the editor."}, {"name": "showImageInsert", "description": "Shows a dialog to insert an image from the available images."}, {"name": "insertImage", "description": "Inserts a placeholder image into the editor."}, {"name": "insertLink", "description": "Inserts a link into the editor based on selected text."}, {"name": "showImageManager", "description": "Displays the image manager for users to select images."}, {"name": "showLinkSelector", "description": "Displays a link selector popup for link insertion."}, {"name": "startDrawing", "description": "Starts a draw.io session to create diagrams."}, {"name": "editDrawing", "description": "Edits an existing drawing in the editor."}, {"name": "handleDrawingUploadError", "description": "Handles errors that occur during drawing uploads."}, {"name": "fullScreen", "description": "Toggles the editor to full-screen mode."}, {"name": "scrollToText", "description": "Scrolls to a specific text in the editor."}, {"name": "focus", "description": "Focuses the editor if it is not already focused."}, {"name": "insertContent", "description": "Inserts specified content into the editor."}, {"name": "prependContent", "description": "Prepends content at the start of the editor."}, {"name": "appendContent", "description": "Appends content at the end of the editor."}, {"name": "replaceContent", "description": "Replaces the entire content of the editor."}, {"name": "replaceLineStart", "description": "Replaces the start of the current line with a new string."}, {"name": "wrapSelection", "description": "Wraps the current selection in specified start and end strings."}, {"name": "cycleCalloutTypeAtSelection", "description": "Cycles through various callout block types in the selection."}, {"name": "syncDisplayPosition", "description": "Synchronizes the display position based on the editor's scroll position."}, {"name": "insertTemplate", "description": "Inserts a template at a specific position in the editor."}, {"name": "insertClipboardImages", "description": "Inserts images from clipboard at specified screen coordinates."}, {"name": "uploadImage", "description": "Uploads an image file to the server and inserts it into the editor."}], "calls": ["window.$events.emit", "window.$http.post", "window.$components.first", "DrawIO.show"], "search-terms": ["Markdown editor", "image management", "link insertion", "drawing tools", "callout styling"], "state": 2, "ctags": [], "filename": "/app/data/T0005/17500/esakkiraja100116/BookStack/resources/js/markdown/actions.js", "hash": "33dc2f27d3dcd97dc50e6864dd6c4ee2", "format-version": 3, "code-base-name": "b8388bl"}